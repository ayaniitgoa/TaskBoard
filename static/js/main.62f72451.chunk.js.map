{"version":3,"sources":["components/BottomButton/BottomButton.jsx","reduxSetup/actions/newListActions.jsx","reduxSetup/actions/types.jsx","components/SingleList/SingleList.jsx","components/AllLists/AllLists.jsx","components/Navbar/Navbar.jsx","reduxSetup/actions/profileImgActions.jsx","containers/HomePage/HomePage.jsx","containers/LoginPage/LoginPage.jsx","containers/Register/Register.jsx","reduxSetup/reducers/profileImgReducer.jsx","reduxSetup/reducers/newListReducer.jsx","reduxSetup/reducers/index.jsx","reduxSetup/store.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","extendedIcon","marginRight","connect","makeNewList","data","dispatch","type","payload","props","classes","useState","listName","setListName","className","Fab","style","backgroundColor","aria-label","data-toggle","data-target","id","aria-labelledby","aria-hidden","autoComplete","noValidate","onSubmit","e","preventDefault","uuidv4","title","alltasks","TextField","value","onChange","target","size","GreenCheckbox","withStyles","color","green","checked","Checkbox","deleteList","addTaskToList","updateTaskToList","uuid","description","date","newTask","setNewTask","Date","selectedDate","setSelectedDate","width","list","aria-haspopup","aria-expanded","cursor","onClick","label","map","task","key","icon","fontSize","checkedIcon","data-backdrop","tabIndex","role","data-dismiss","updateSingleTask","variant","multiline","rows","disableToolbar","format","KeyboardButtonProps","Button","state","allLists","AllLists","flexGrow","menuButton","imgData","profileImg","fetchProfileImg","img_number","Math","floor","random","axios","get","then","res","catch","console","log","useEffect","AppBar","position","background","Toolbar","Typography","download_url","src","alt","HomePage","Helmet","charSet","CssTextField","borderBottomColor","borderColor","display","flexWrap","input","fontStyle","LoginPage","setChecked","email","setEmail","password","setPassword","loginBtn","setLoginBtn","localData","setLocalData","JSON","parse","localStorage","getItem","history","push","InputProps","InputLabelProps","FormControlLabel","control","event","name","inputProps","Link","href","disabled","marginTop","Register","username","setUsername","signInBtn","setSignInBtn","userData","setItem","stringify","initialState","loading","currentList","combineReducers","action","filter","item","i","length","updatedAllLists","j","k","updatedLists","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","utils","DateFnsUtils","component","exact","path","to","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.62f72451.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { makeNewList } from '../../reduxSetup/actions/newListActions';\r\nimport './BottomButton.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction BottomButton(props) {\r\n  const classes = useStyles();\r\n\r\n  const [listName, setListName] = useState('New List');\r\n\r\n  const handleNewListSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.makeNewList({ id: uuidv4(), title: listName, alltasks: [] });\r\n  };\r\n\r\n  return (\r\n    <div className={'bottom-btn-modal-btn ' + classes.root}>\r\n      <Fab\r\n        style={{\r\n          backgroundColor: '#0d47a1',\r\n        }}\r\n        aria-label='add'\r\n        className='bottom-btn'\r\n        data-toggle='modal'\r\n        data-target='#addNewList'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n\r\n      <div\r\n        className='modal fade'\r\n        id='addNewList'\r\n        aria-labelledby='exampleModalLabel'\r\n        aria-hidden='true'\r\n      >\r\n        <div className='modal-dialog modal-dialog-centered'>\r\n          <div className='modal-content rounded-0'>\r\n            <div className='modal-body'>\r\n              <form\r\n                autoComplete='off'\r\n                noValidate\r\n                className='addlist-form'\r\n                onSubmit={handleNewListSubmit}\r\n              >\r\n                <TextField\r\n                  id='filled-basic'\r\n                  value={listName}\r\n                  onChange={(e) => {\r\n                    setListName(e.target.value);\r\n                  }}\r\n                />\r\n                <Fab\r\n                  style={{\r\n                    backgroundColor: '#0d47a1',\r\n                  }}\r\n                  aria-label='addTask'\r\n                  className='add-list-btn'\r\n                  size='small'\r\n                  type='submit'\r\n                >\r\n                  <AddIcon />\r\n                </Fab>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { makeNewList })(BottomButton);\r\n","import {\r\n  MAKE_NEW_LIST,\r\n  DELETE_LIST,\r\n  ADD_TASK_TO_LIST,\r\n  UPDATE_TASK_TO_LIST,\r\n} from './types';\r\n\r\nexport const makeNewList = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: MAKE_NEW_LIST,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const deleteList = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: DELETE_LIST,\r\n    payload: id,\r\n  });\r\n};\r\n\r\nexport const addTaskToList = (data) => (dispatch) => {\r\n  // console.log(data);\r\n  dispatch({\r\n    type: ADD_TASK_TO_LIST,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const updateTaskToList = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATE_TASK_TO_LIST,\r\n    payload: data,\r\n  });\r\n};\r\n","export const FETCH_PROFILE_IMG = 'FETCH_PROFILE_IMG';\r\nexport const MAKE_NEW_LIST = 'MAKE_NEW_LIST';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const ADD_TASK_TO_LIST = 'ADD_TASK_TO_LIST';\r\nexport const UPDATE_TASK_TO_LIST = 'UPDATE_TASK_TO_LIST';\r\n","import React, { useState } from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CircleChecked from '@material-ui/icons/CheckCircleOutline';\r\nimport CircleUnchecked from '@material-ui/icons/RadioButtonUnchecked';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  deleteList,\r\n  addTaskToList,\r\n  updateTaskToList,\r\n} from '../../reduxSetup/actions/newListActions';\r\nimport { v4 as uuid } from 'uuid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './SingleList.css';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport format from 'date-fns/format';\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: '#0d47a1',\r\n\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color='default' {...props} />);\r\n\r\nfunction SingleList(props) {\r\n  const [newTask, setNewTask] = useState({\r\n    title: '',\r\n    id: uuid(),\r\n    description: '',\r\n    date: '',\r\n    checked: false,\r\n  });\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date('2020-10-18T21:11:54')\r\n  );\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  // };\r\n  const handleAddTaskSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.addTaskToList({\r\n      data: newTask,\r\n      id: props.list.id,\r\n    });\r\n    setNewTask({\r\n      title: '',\r\n      id: uuid(),\r\n      description: '',\r\n      date: '',\r\n      checked: false,\r\n    });\r\n  };\r\n\r\n  const updateSingleTask = (e, id) => {\r\n    e.preventDefault();\r\n    props.updateTaskToList({\r\n      data: newTask,\r\n\r\n      id: props.list.id,\r\n    });\r\n    setNewTask({\r\n      title: '',\r\n      id: uuid(),\r\n      description: '',\r\n      date: '',\r\n      checked: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='card mt-5 ml-4' style={{ width: '20rem' }}>\r\n      <div className='card-body'>\r\n        <div className='card-top-part'>\r\n          <h5 className='card-title ' style={{ color: '#0d47a1' }}>\r\n            {props.list.title}\r\n          </h5>\r\n\r\n          <div className='dropdown three-dots'>\r\n            <button\r\n              type='button'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n              className='button-threedots'\r\n            >\r\n              <i style={{ color: '#0d47a1' }} className='fas fa-ellipsis-v'></i>{' '}\r\n            </button>\r\n            <div\r\n              style={{ cursor: 'pointer' }}\r\n              className='dropdown-menu'\r\n              aria-labelledby='dropdownMenuButton'\r\n            >\r\n              <p\r\n                onClick={() => {\r\n                  props.deleteList(props.list.id);\r\n                }}\r\n                className='dropdown-item'\r\n              >\r\n                Delete List\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <form className='mt-3' onSubmit={handleAddTaskSubmit}>\r\n          <div className='card-add-task-form'>\r\n            <Fab\r\n              size='small'\r\n              style={{\r\n                backgroundColor: '#0d47a1',\r\n                color: 'white',\r\n              }}\r\n              aria-label='add'\r\n              type='submit'\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n\r\n            <h5 className='card-add-task-text' style={{ color: '#0d47a1' }}>\r\n              Add a Task\r\n            </h5>\r\n          </div>\r\n\r\n          <TextField\r\n            id='standard-basic'\r\n            style={{ width: '17rem' }}\r\n            label='Enter Task Name..'\r\n            className='mt-2'\r\n            value={newTask.title}\r\n            onChange={(e) => {\r\n              setNewTask({ ...newTask, title: e.target.value });\r\n            }}\r\n          />\r\n        </form>\r\n\r\n        <div className='number-of-completed-task mt-4'>\r\n          {/* <h5 className='number-of-completed-task-text'>Completed(0)</h5> */}\r\n        </div>\r\n        {props.list.alltasks.map((task, key) => {\r\n          return (\r\n            <div key={key} className=''>\r\n              <div className='one-list-all-tasks'>\r\n                <GreenCheckbox\r\n                  icon={<CircleUnchecked style={{ fontSize: 45 }} />}\r\n                  checkedIcon={<CircleChecked style={{ fontSize: 45 }} />}\r\n                />\r\n                <h5 className='task-title'>{task.title}</h5>\r\n\r\n                <i\r\n                  data-toggle='modal'\r\n                  data-target={'#updateTaskModal' + task.id}\r\n                  className='fas fa-pen update-btn-single-task'\r\n                  onClick={() => {\r\n                    // console.log(task.id);\r\n                  }}\r\n                ></i>\r\n              </div>\r\n\r\n              {task.description && (\r\n                <h6 className='task-description'>{task.description}</h6>\r\n              )}\r\n              {task.date && <h6 className='task-date'>{task.date}</h6>}\r\n\r\n              {/* MODAL _ UPDATE */}\r\n              <div\r\n                className='modal modal2 fade'\r\n                data-backdrop='false'\r\n                id={'updateTaskModal' + task.id}\r\n                tabIndex='-1'\r\n                role='dialog'\r\n                aria-labelledby='exampleModalLabel'\r\n                aria-hidden='true'\r\n              >\r\n                <div className='modal-dialog' role='document'>\r\n                  <div className='modal-content'>\r\n                    <div className='modal-header'>\r\n                      <i className='far fa-trash-alt trash-btn-task'></i>\r\n                      <button\r\n                        type='button'\r\n                        className='close'\r\n                        data-dismiss='modal'\r\n                        aria-label='Close'\r\n                      >\r\n                        <span aria-hidden='true'>&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div className='modal-body'>\r\n                      <h5>{task.title}</h5>\r\n                      <form onSubmit={(e) => updateSingleTask(e, task.id)}>\r\n                        <TextField\r\n                          label='Add Details'\r\n                          variant='filled'\r\n                          multiline\r\n                          rows={6}\r\n                          style={{ width: '29rem' }}\r\n                          value={newTask.description}\r\n                          onChange={(e) => {\r\n                            setNewTask({\r\n                              ...newTask,\r\n                              title: task.title,\r\n                              id: task.id,\r\n                              description: e.target.value,\r\n                            });\r\n                          }}\r\n                        />\r\n\r\n                        <KeyboardDatePicker\r\n                          disableToolbar\r\n                          variant='inline'\r\n                          format='dd/MM/yyyy'\r\n                          margin='normal'\r\n                          id='date-picker-inline'\r\n                          label='Date'\r\n                          value={selectedDate}\r\n                          onChange={(date) => {\r\n                            setSelectedDate(date);\r\n                            setNewTask({\r\n                              ...newTask,\r\n                              title: task.title,\r\n                              id: task.id,\r\n                              date: format(date, 'do MMM,yyyy'),\r\n                            });\r\n                          }}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                        />\r\n\r\n                        <br />\r\n                        <Button\r\n                          variant='contained'\r\n                          style={{ backgroundColor: '#0d47a1', color: 'white' }}\r\n                          className='mt-3'\r\n                          type='submit'\r\n                        >\r\n                          Save Changes\r\n                        </Button>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null, { deleteList, addTaskToList, updateTaskToList })(\r\n  SingleList\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './AllLists.css';\r\nimport SingleList from '../SingleList/SingleList';\r\nfunction Lists(props) {\r\n  return (\r\n    <div className='all-lists custom-alllists-container'>\r\n      {props.allLists.map((list, key) => {\r\n        return (\r\n          <div\r\n            key={key}\r\n            // onClick={() => {\r\n            //   console.log(list.id);\r\n            // }}\r\n          >\r\n            <SingleList list={list} />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  allLists: state.allLists.AllLists,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Lists);\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from 'react-redux';\r\nimport { fetchProfileImg } from '../../reduxSetup/actions/profileImgActions';\r\n\r\nimport './Navbar.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Navbar(props) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    props.fetchProfileImg();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static' style={{ background: '#0d47a1' }}>\r\n        <Toolbar>\r\n          <Typography variant='h6' className={classes.title}>\r\n            TasksBoard\r\n          </Typography>\r\n          {props.imgData.download_url ? (\r\n            <img\r\n              src={props.imgData.download_url}\r\n              alt='Profile'\r\n              className='profile-image'\r\n            />\r\n          ) : (\r\n            <p>Loading..</p>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  imgData: state.profileImg.imgData,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchProfileImg })(Navbar);\r\n","import { FETCH_PROFILE_IMG } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const fetchProfileImg = () => (dispatch) => {\r\n  const img_number = Math.floor(Math.random() * 1000);\r\n  axios\r\n    .get(`https://picsum.photos/id/${img_number}/info`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: FETCH_PROFILE_IMG,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n};\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport BottomButton from '../../components/BottomButton/BottomButton';\r\nimport AllLists from '../../components/AllLists/AllLists';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet='utf-8' />\r\n        <title>TaskBoard</title>\r\n      </Helmet>\r\n      <Navbar />\r\n      <AllLists />\r\n      <BottomButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Helmet } from 'react-helmet';\r\nimport './LoginPage.css';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'white',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n      '&::placeholder': {\r\n        color: 'white',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    color: 'white',\r\n    '&::placeholder': {\r\n      fontStyle: 'italic',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction LoginPage(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginBtn, setLoginBtn] = useState(true);\r\n  const [localData, setLocalData] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(email, password);\r\n    if (localData) {\r\n      if (email === localData[1] && password === localData[2]) {\r\n        props.history.push('/');\r\n      } else {\r\n        console.log(email, localData[1], password, localData[2]);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (email && password) {\r\n      setLoginBtn(false);\r\n    } else {\r\n      setLoginBtn(true);\r\n    }\r\n  }, [password, email]);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem('userData'));\r\n    setLocalData(data);\r\n    console.log(data);\r\n    if (data) {\r\n      setEmail(data[1]);\r\n      setPassword(data[2]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet='utf-8' />\r\n        <title>Login</title>\r\n      </Helmet>\r\n      <div className='login-container'>\r\n        <h1 className='loginHeader'>Log In!</h1>\r\n        <form\r\n          noValidate\r\n          autoComplete='off'\r\n          className='login-form'\r\n          onSubmit={handleLoginSubmit}\r\n        >\r\n          <CssTextField\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n            value={email}\r\n            id='login-email'\r\n            label='Email'\r\n            variant='outlined'\r\n            className='login-input'\r\n            InputProps={{\r\n              className: classes.input,\r\n            }}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: 'white',\r\n              },\r\n            }}\r\n          />\r\n          <CssTextField\r\n            className='login-input'\r\n            value={password}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n            id='login-password'\r\n            label='Password'\r\n            variant='outlined'\r\n            InputProps={{\r\n              className: classes.input,\r\n            }}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: 'white',\r\n              },\r\n            }}\r\n          />\r\n          <div className='login-last-line'>\r\n            <div className='remember-me'>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={checked}\r\n                    onChange={handleChange}\r\n                    name='Remember Me'\r\n                    style={{\r\n                      color: 'white',\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                  />\r\n                }\r\n                label='Remember Me'\r\n              />\r\n            </div>\r\n            <div className='forgot-pass'>\r\n              <Typography className={classes.root}>\r\n                <Link\r\n                  style={{\r\n                    color: 'white',\r\n                  }}\r\n                  href='#'\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  Forgot Password\r\n                </Link>\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <Button\r\n            disabled={loginBtn}\r\n            type='submit'\r\n            variant='contained'\r\n            style={{ marginTop: '1rem' }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport './Register.css';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'white',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n      '&::placeholder': {\r\n        color: 'white',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    color: 'white',\r\n    '&::placeholder': {\r\n      fontStyle: 'italic',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Register(props) {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [signInBtn, setSignInBtn] = useState(true);\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n    if (event.target.checked && username && email && password) {\r\n      setSignInBtn(false);\r\n    } else {\r\n      setSignInBtn(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (checked && username && email && password) {\r\n      setSignInBtn(false);\r\n    } else {\r\n      setSignInBtn(true);\r\n    }\r\n  }, [checked, username, password, email]);\r\n\r\n  const onRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(username, email, password, checked);\r\n    const userData = [username, email, password];\r\n    localStorage.setItem('userData', JSON.stringify(userData));\r\n    props.history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet='utf-8' />\r\n        <title>Sign Up</title>\r\n      </Helmet>\r\n      <div className='register-container'>\r\n        <h1 className='registerHeader'>Sign In!</h1>\r\n        <form\r\n          noValidate\r\n          className={'register-form ' + classes.root}\r\n          autoComplete='off'\r\n          onSubmit={onRegisterSubmit}\r\n        >\r\n          <CssTextField\r\n            id='login-email'\r\n            label='Username'\r\n            variant='outlined'\r\n            className='register-input'\r\n            InputProps={{\r\n              className: classes.input,\r\n            }}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: 'white',\r\n              },\r\n            }}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <CssTextField\r\n            id='login-email'\r\n            label='Email'\r\n            variant='outlined'\r\n            className='register-input'\r\n            InputProps={{\r\n              className: classes.input,\r\n            }}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: 'white',\r\n              },\r\n            }}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <CssTextField\r\n            id='login-password'\r\n            label='Password'\r\n            variant='outlined'\r\n            className='register-input'\r\n            InputProps={{\r\n              className: classes.input,\r\n            }}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: 'white',\r\n              },\r\n            }}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <div className='terms'>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={checked}\r\n                  onChange={handleChange}\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                  style={{\r\n                    color: 'white',\r\n                  }}\r\n                />\r\n              }\r\n              label='I agree the terms and conditions'\r\n            />\r\n          </div>\r\n          <Button\r\n            disabled={signInBtn}\r\n            type='submit'\r\n            variant='contained'\r\n            style={{ marginTop: '1rem' }}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { FETCH_PROFILE_IMG } from '../actions/types';\r\n\r\nconst initialState = {\r\n  imgData: {},\r\n  loading: true,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PROFILE_IMG:\r\n      return {\r\n        ...state,\r\n        imgData: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  MAKE_NEW_LIST,\r\n  DELETE_LIST,\r\n  ADD_TASK_TO_LIST,\r\n  UPDATE_TASK_TO_LIST,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  AllLists: [],\r\n  currentList: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case MAKE_NEW_LIST:\r\n      return {\r\n        ...state,\r\n        currentList: action.payload,\r\n        AllLists: [...state.AllLists, action.payload],\r\n      };\r\n\r\n    case DELETE_LIST:\r\n      return {\r\n        ...state,\r\n        AllLists: state.AllLists.filter((item) => item.id !== action.payload),\r\n      };\r\n\r\n    case ADD_TASK_TO_LIST:\r\n      for (var i = 0; i < state.AllLists.length; i++) {\r\n        if (state.AllLists[i].id === action.payload.id) {\r\n          state.AllLists[i].alltasks.push(action.payload.data);\r\n        }\r\n      }\r\n\r\n      const updatedAllLists = state.AllLists;\r\n\r\n      return {\r\n        ...state,\r\n        AllLists: updatedAllLists,\r\n      };\r\n\r\n    case UPDATE_TASK_TO_LIST:\r\n      for (var j = 0; j < state.AllLists.length; j++) {\r\n        if (state.AllLists[j].id === action.payload.id) {\r\n          for (var k = 0; k < state.AllLists[j].alltasks.length; k++) {\r\n            if (state.AllLists[j].alltasks[k].id === action.payload.data.id) {\r\n              if (action.payload.data.description) {\r\n                state.AllLists[j].alltasks[k].description =\r\n                  action.payload.data.description;\r\n              }\r\n\r\n              if (action.payload.data.date) {\r\n                state.AllLists[j].alltasks[k].date = action.payload.data.date;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      const updatedLists = state.AllLists;\r\n\r\n      // console.log(updatedLists);\r\n      return {\r\n        ...state,\r\n        AllLists: updatedLists,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport profileImgReducer from './profileImgReducer';\r\nimport newListReducer from './newListReducer';\r\n\r\nexport default combineReducers({\r\n  profileImg: profileImgReducer,\r\n  allLists: newListReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './App.css';\nimport HomePage from './containers/HomePage/HomePage';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport LoginPage from './containers/LoginPage/LoginPage';\nimport Register from './containers/Register/Register';\nimport store from './reduxSetup/store';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nfunction App() {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Provider store={store}>\n        <Router>\n          <div className='App'>\n            <Switch>\n              {localStorage.getItem('')}\n              <Route component={HomePage} exact path='/' />\n              {localStorage.getItem('userData') !== null ? (\n                <Redirect to='/login' />\n              ) : (\n                <Route component={Register} exact path='/register' />\n              )}\n              <Route component={LoginPage} exact path='/login' />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default App;\n\n// <div key={key} className=''>\n// <UpdateModal task={task} />\n// <div className='one-list-all-tasks'>\n//   <GreenCheckbox\n//     icon={<CircleUnchecked style={{ fontSize: 45 }} />}\n//     checkedIcon={<CircleChecked style={{ fontSize: 45 }} />}\n//   />\n//   <h5 className='task-title'>{task.title}</h5>\n\n//   <i\n//     data-toggle='modal'\n//     data-target={'#updateTaskModal' + task.id}\n//     className='fas fa-pen update-btn-single-task'\n//     onClick={() => {\n//       // console.log(task.id);\n//     }}\n//   ></i>\n// </div>\n\n// <h6 className='task-description'>{task.description}</h6>\n// <h6 className='task-date'>{task.date}</h6>\n\n// {/* MODAL _ UPDATE */}\n// <div\n//   className='modal fade'\n//   id={'updateTaskModal' + task.id}\n//   tabIndex='-1'\n//   role='dialog'\n//   aria-labelledby='exampleModalLabel'\n//   aria-hidden='true'\n//   data-backdrop='false'\n// >\n//   <div className='modal-dialog' role='document'>\n//     <div className='modal-content'>\n//       <div className='modal-header'>\n//         <i className='far fa-trash-alt trash-btn-task'></i>\n//         <button\n//           type='button'\n//           className='close'\n//           data-dismiss='modal'\n//           aria-label='Close'\n//         >\n//           <span aria-hidden='true'>&times;</span>\n//         </button>\n//       </div>\n//       <div className='modal-body'>\n//         <h5>{task.title}</h5>\n//         <form onSubmit={(e) => updateSingleTask(e, task.id)}>\n//           <TextField\n//             label='Add Details'\n//             variant='filled'\n//             multiline\n//             rows={6}\n//             style={{ width: '29rem' }}\n//             value={newTask.description}\n//             onChange={(e) => {\n//               setNewTask({\n//                 ...newTask,\n//                 title: task.title,\n//                 id: task.id,\n//                 description: e.target.value,\n//               });\n//             }}\n//           />\n\n//           <KeyboardDatePicker\n//             disableToolbar\n//             variant='inline'\n//             format='dd/MM/yyyy'\n//             margin='normal'\n//             id='date-picker-inline'\n//             label='Date picker inline'\n//             value={selectedDate}\n//             onChange={handleDateChange}\n//             KeyboardButtonProps={{\n//               'aria-label': 'change date',\n//             }}\n//           />\n\n//           {/* <TextField\n//             id='date'\n//             label='Add Date'\n//             type='date'\n//             defaultValue='2017-05-24'\n//             InputLabelProps={{\n//               shrink: true,\n//             }}\n//             className='mt-3'\n//             onChange={(e) => {\n//               setNewTask({\n//                 ...newTask,\n//                 title: task.title,\n//                 id: task.id,\n//                 date: e.target.value,\n//               });\n//             }}\n//           /> */}\n//           <br />\n//           <Button\n//             variant='contained'\n//             style={{ backgroundColor: '#0d47a1', color: 'white' }}\n//             className='mt-3'\n//             type='submit'\n//           >\n//             Save Changes\n//           </Button>\n//         </form>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}